<?php

/**
 * This is the model class for table "OutstandingIssues".
 *
 * The followings are the available columns in table 'OutstandingIssues':
 * @property integer $id
 * @property string $text
 * @property integer $author
 * @property integer $status
 * @property string $created
 * @property string $updated
 */
class OutstandingIssues extends CActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'OutstandingIssues';
	}

	public function behaviors(){
		return array(
			'CTimestampBehavior' => array(
				'class' => 'zii.behaviors.CTimestampBehavior',
				'createAttribute' => 'created',
				'updateAttribute' => 'updated',
			)
		);
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('text', 'required'),
            array('client_id', 'required', 'message'=>'Please select client'),
			array('author, status', 'numerical', 'integerOnly'=>true),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, text, author, status, created, updated', 'safe', 'on'=>'search, search2'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'creator' => array(self::BELONGS_TO, 'User', 'author'),
			'client' => array(self::BELONGS_TO, 'Client', 'client_id'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'text' => 'Text',
			'author' => 'Author',
			'status' => '1 - active, 0 - inactive',
			'created' => 'Created',
			'updated' => 'Updated',
		);
	}

	public function searchUIssues()
	{
		$criteria=new CDbCriteria;
    	$criteria->compare('id',$this->id);
		$criteria->compare('text',$this->text,true);
		$criteria->compare('author',$this->author);
		$criteria->compare('status',$this->status);
		$criteria->compare('created',$this->created,true);
		$criteria->compare('updated',$this->updated,true);
        if($is = User::model()->findByPk(Yii::app()->user->id)->allIssues){
            $issues = implode(',', array_keys(CHtml::listData($is,'id','author')));
            if(!empty($issues)) 
                $criteria->addcondition("id IN(".$issues.")");
        }else
            $criteria->compare('id',0);
		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}
    
    public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.
		$criteria=new CDbCriteria;
		$criteria->compare('id',$this->id);
		$criteria->compare('text',$this->text,true);
		$criteria->compare('author',$this->author);
		$criteria->compare('status',$this->status);
		$criteria->compare('created',$this->created,true);
		$criteria->compare('updated',$this->updated,true);
		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return OutstandingIssues the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

    protected function beforeSave()
    {
        $this->author = Yii::app()->user->id;
        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }


}
